global
  log 127.0.0.1 local5 debug
  chroot /var/lib/haproxy
  user haproxy
  group haproxy
  daemon

defaults
  log     global
  mode    tcp
  option  dontlognull
  timeout connect 5000
  timeout client 30000
  timeout server 30000
  log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tw/%Tc/%Tt\ %B\ %ts\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq

listen stats
  bind {{ v_haproxy_stats_listening_ip }}:{{ v_haproxy_stats_listening_port }}
  mode http
  stats enable
  stats hide-version
  http-request set-log-level silent
  stats uri /{{ v_haproxy_stats_uri }} # Stats URI

listen healthcheck
  bind *:65000
  mode http
  monitor-uri /
  errorfile 200 /etc/haproxy/200_http_ok

listen reverseproxy
  bind *:443
  log	global
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  {% for item in granted_domains %}
  use_backend {{ item.domain }} if { req_ssl_sni -i {{ item.domain }} }
  {% if item.alias is defined %}
  {% for _alias in item.alias %}
  # Alias
  use_backend {{ item.domain }} if { req_ssl_sni -i {{ _alias }} }
  {% endfor %}
  {% endif %}

  {% endfor %}

{% for item in granted_domains %}
backend {{ item.domain }}
  # Maximum SSL session ID length is 32 bytes.
  stick-table type binary len 32 size 30k expire 30m

  acl clienthello req_ssl_hello_type 1
  acl serverhello rep_ssl_hello_type 2

  # Use tcp content accepts to detects ssl client and server hello.
  tcp-request inspect-delay 5s
  tcp-request content accept if clienthello
  # No timeout on response inspect delay by default.
  tcp-response content accept if serverhello

  stick on payload_lv(43,1) if clienthello
  # Learn on response if server hello.
  stick store-response payload_lv(43,1) if serverhello

  option ssl-hello-chk
  server {{ item.domain }} {{ mid_waf_lb_ip }}:443 check

{% endfor %}

