# Telegraf configuration 
[global_tags]
  az = "{{ ec2_availabilityzone }}"
  ciap = "{{ ec2_aws_cloudformation_stack_name }}"
  bl = "{{ ec2_bl }}"
  env = "{{ ec2_env }}"
  fonction = "{{ ec2_fonction }}"
  region = "{{ ec2_region }}"
  stage = "{{ ec2_stage }}"

[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "5s"
  flush_interval = "60s"
  flush_jitter = "0s"
  precision = "s"
  debug = false
  quiet = true
  logfile = "{{ v_log_path }}/telegraf/telegraf.log"
  hostname = "{{ ec2_name }}"
  omit_hostname = false

[[outputs.http]]
  url = "https://{{ ec2_low_met_private_dns_names }}:{{ v_metrology_influxdb_port }}"
  timeout = "5s"
  tls_cert = "{{ v_certificates_path}}/telegraf.crt"
  tls_key = "{{ v_certificates_path}}/telegraf.key"
  insecure_skip_verify = true
  data_format = "json"
  [outputs.http.headers]
      Content-Type = "application/json; charset=utf-8"

{% for item in granted_domains -%}
{% if item.http| bool -%}
[[inputs.net_response]]
  protocol = "tcp"
  address = "{{ item.http_listening_ip }}:{{ item.http_listening_port }}"
  timeout = "2s"
  [inputs.net_response.tags]
      domain = "{{ item.domain }}"
      component = "waf"
{%- endif %}

[[inputs.net_response]]
  protocol = "tcp"
  address = "{{ item.http2_listening_ip }}:{{ item.http2_listening_port }}"
  timeout = "2s"
  [inputs.net_response.tags]
      domain = "{{ item.domain }}"
      component = "ids"

[[inputs.net_response]]
  protocol = "tcp"
  address = "{{ item.https_listening_ip }}:{{ item.https_listening_port }}"
  timeout = "2s"
  [inputs.net_response.tags]
      domain = "{{ item.domain }}"
      component = "waf"

[[inputs.net_response]]
  protocol = "tcp"
  address = "{{ item.havp_listening_ip }}:{{ item.havp_listening_port }}"
  timeout = "2s"
  [inputs.net_response.tags]
      domain = "{{ item.domain }}"
      component = "av"

{% if item.backend_protocol  == "http" -%}
[[inputs.net_response]]
  protocol = "tcp"
  address = "{{ clb_mid_low_dns_name }}:{{ item.http_listening_port }}"
  timeout = "2s"
  [inputs.net_response.tags]
      domain = "{{ item.domain }}"
      component = "elb"

{%- endif %}

{% if item.backend_protocol  == "https" -%}
[[inputs.net_response]]
  protocol = "tcp"
  address = "{{ clb_mid_low_dns_name }}:{{ item.https_listening_port }}"
  timeout = "2s"
  [inputs.net_response.tags]
      domain = "{{ item.domain }}"
      component = "elb"

{%- endif %}

[[inputs.nginx]]
 urls = [
{% if item.http| bool -%}
 "http://127.0.0.1:{{ item.http_listening_port }}/nginx_status",
{%- endif %}
 "https://127.0.0.1:{{ item.https_listening_port }}/nginx_status", 
 "http://127.0.0.1:{{ item.http2_listening_port }}/nginx_status"]
  insecure_skip_verify = true
  response_timeout = "5s"
  [inputs.nginx.tags]
      domain = "{{ item.domain }}"
      component = "nginx"

{%- endfor %}
