heat_template_version: '2018-08-31'

description: CIAP load balancer server

#>===========================================================================<#
#>=======                         Parameters                          =======<#
#>===========================================================================<#
parameters:
  name:
    type: string
    description: Server name

  image:
    type: string
    description: Image used by the server

  flavor:
    type: string
    description: Flavor desired

  ssh_user:
    type: string
    description: SSH User to connect to the server

  ssh_authorized_key:
    type: string
    description: SSH key to connect to the server

  metadata:
    type: json

  network:
    type: string
    description: Network used by the server

  subnet:
    type: string
    description: Subnet used by the server

  security_group:
    type: string
    description: Security Group

  pool:
    type: string
    description: Pool to contact

#>===========================================================================<#
#>=======                          Resources                          =======<#
#>===========================================================================<#
resources:
  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      metadata: { get_param: metadata }
      networks: [{ network: { get_param: network } }]
      security_groups: [{ get_param: security_group }]
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            users:
              - name: $NAME
                sudo: ALL=(ALL) NOPASSWD:ALL
                groups: sudo
                ssh_authorized_keys:
                  - $PUBLIC_KEY
                shell: /bin/bash
            disable_root: true
          params:
            $NAME: { get_param: ssh_user }
            $PUBLIC_KEY: { get_param: ssh_authorized_key }

  member:
    type: OS::Octavia::PoolMember
    properties:
      pool: { get_param: pool }
      address: { get_attr: [server, first_address] }
      protocol_port: 443
      subnet: { get_param: subnet }
      monitor_port: 65000
